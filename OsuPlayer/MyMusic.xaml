<Page
    x:Class="OsuPlayer.MyMusic"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:OsuPlayer"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:viewModel="using:OsuPlayer.ViewModel"
    mc:Ignorable="d"
    >
    <Page.Resources>
        <SolidColorBrush x:Key="ListHeaderTextBrush" Color="{ThemeResource SystemColorGrayTextColor}"/>
        <Style x:Key="SortOrderToggleButtonTemplate" TargetType="ToggleButton">
            <Setter Property="Background" Value="Green"/>
            <Setter Property="Content" Value="↓"/>
            <Setter Property="BackgroundSizing" Value="OuterBorderEdge"/>
            <Setter Property="Foreground" Value="{ThemeResource ToggleButtonForeground}"/>
            <Setter Property="BorderBrush" Value="{ThemeResource ToggleButtonBorderBrush}"/>
            <Setter Property="BorderThickness" Value="{ThemeResource ToggleButtonBorderThemeThickness}"/>
            <Setter Property="Padding" Value="{StaticResource ButtonPadding}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
            <Setter Property="FocusVisualMargin" Value="-3"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" Background="{TemplateBinding Background}" BackgroundSizing="{TemplateBinding BackgroundSizing}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}"  ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundPointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushPointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundPointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundPressed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushPressed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundPressed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Red"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundChecked}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushChecked}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                        <VisualState.Setters>
                                            <Setter Target="ContentPresenter.Content">
                                                <Setter.Value>
                                                    <SymbolIcon Symbol="Up"/>
                                                </Setter.Value>
                                            </Setter>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="CheckedPointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundCheckedPointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushCheckedPointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundCheckedPointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckedPressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundCheckedPressed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundCheckedPressed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushCheckedPressed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckedDisabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundCheckedDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundCheckedDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushCheckedDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundIndeterminate}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundIndeterminate}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushIndeterminate}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="IndeterminatePointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundIndeterminatePointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushIndeterminatePointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundIndeterminatePointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="IndeterminatePressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundIndeterminatePressed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushIndeterminatePressed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundIndeterminatePressed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="IndeterminateDisabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundIndeterminateDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundIndeterminateDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushIndeterminateDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </ContentPresenter>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="HighlightButtonStyle" TargetType="Button">
            <Style.Setters>
                <Setter Property="Background" Value="OrangeRed"/>
                <Setter Property="Foreground" Value="Black"/>
            </Style.Setters>
        </Style>

        <x:String x:Key="SingerIconGlyph">&#xE77B;</x:String>
        <x:String x:Key="MoveToIconGlyph">&#xE8DE;</x:String>
        <x:String x:Key="VersionIconGlyph">&#xE8FD;</x:String>
        <x:String x:Key="ListIconGlyph">&#xE71D;</x:String>
        <x:String x:Key="AlbumIconGlyph">&#xEB9F;</x:String>
        <x:String x:Key="RightArrowIconGlyph">&#xE974;</x:String>
        <SymbolIcon x:Key="ClearIcon" Symbol="Clear"/>
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="37*"/>
                <ColumnDefinition Width="338*"/>
                <ColumnDefinition Width="375*"/>
            </Grid.ColumnDefinitions>

            <TextBlock x:Uid="MyMusicText" FontSize="50" Margin="20,40,20,40" Grid.Column="0" Grid.ColumnSpan="2"/>

            <StackPanel Orientation="Horizontal" Grid.Column="2" HorizontalAlignment="Right" Margin="0,0,50,0">
                <ComboBox 
                    HorizontalContentAlignment="Right" 
                    HorizontalAlignment="Right"
                    Margin="0,0,50,0"
                    VerticalAlignment="Center"
                    Width="Auto"
                    Height="Auto"
                    Header="Sorted by:"
                    x:Name="SortOrderSelectionCombobox"
                    SelectedIndex="{x:Bind ViewModel.SortByIndex, Mode=TwoWay}"
                >
                    <ComboBox.Items>
                        <ComboBoxItem Content="Artist"/>
                        <ComboBoxItem Content="BPM"/>
                        <ComboBoxItem Content="Creator"/>
                        <ComboBoxItem Content="Date Added"/>
                        <ComboBoxItem Content="Difficulty"/>
                        <ComboBoxItem Content="Length"/>
                        <ComboBoxItem Content="Rank Achieved"/>
                        <ComboBoxItem Content="Title"/>
                    </ComboBox.Items>
                </ComboBox>
                
                <ToggleButton Style="{StaticResource SortOrderToggleButtonTemplate}" x:Name="OrderToggleButton" Click="OrderToggleButton_Click" IsThreeState="True" Margin="-50,28,0,0"/>
            </StackPanel>
        </Grid>


        <muxc:NavigationView x:Name="Category" 
            PaneDisplayMode="Top"
            Grid.Row="1"
            IsBackButtonVisible="Collapsed"
            SelectionFollowsFocus="Enabled"
            IsSettingsVisible="False"
            SelectionChanged="Category_SelectionChanged"
        >
            <muxc:NavigationView.MenuItems>
                <muxc:NavigationViewItem x:Name="CollectionsCategoryItem" Content="Collections"/>
                <muxc:NavigationViewItem x:Name="ArtistsCategoryItem" Content="Artists"/>
                <muxc:NavigationViewItem x:Name="NoGroupingCategoryItem" Content="No Grouping"/>
            </muxc:NavigationView.MenuItems>

            <Frame x:Name="MusicListFrame" Background="{ThemeResource SystemControlAcrylicWindowBrush}">
                <Grid>
                    <Grid VerticalAlignment="Top" Visibility="Collapsed">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <StackPanel Orientation="Horizontal" Grid.Column="0">
                            <CheckBox x:Name="MultiSelectionCheckBox" Content="1 item selected"/>
                            <Button x:Name="ClearSelectionButton" Content="Clear" Background="OrangeRed"/>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Right">
                            <Button x:Name="Other" Content="Clear" Background="OrangeRed"/>
                        </StackPanel>
                    </Grid>

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <muxc:ProgressBar HorizontalAlignment="Stretch" IsIndeterminate="True" Grid.Row="0"/>
                        
                        <!-- This is the header of list view-->
                        <Grid Grid.Row="1" IsRightTapEnabled="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="67"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Grid.ContextFlyout>
                                <MenuFlyout>
                                    <MenuFlyoutItem x:Uid="ColumnHeaderSetting" Click="ColumnHeaderSetting_Click">
                                        <MenuFlyoutItem.Icon>
                                            <SymbolIcon Symbol="Setting"/>
                                        </MenuFlyoutItem.Icon>
                                    </MenuFlyoutItem>
                                </MenuFlyout>
                            </Grid.ContextFlyout>

                            <Grid Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="Title" Grid.Column="0" Foreground="{StaticResource ListHeaderTextBrush}" Visibility="{x:Bind MusicList.Visibility, Mode=OneWay}"/>
                                <TextBlock Text="Singer" Grid.Column="1" Foreground="{StaticResource ListHeaderTextBrush}" Visibility="{x:Bind MusicList.Visibility, Mode=OneWay}"/>
                                <TextBlock Text="Mapper" Grid.Column="2" Foreground="{StaticResource ListHeaderTextBrush}" Visibility="{x:Bind MusicList.Visibility, Mode=OneWay}"/>
                                <TextBlock Text="Length" Grid.Column="3" Foreground="{StaticResource ListHeaderTextBrush}" Visibility="{x:Bind MusicList.Visibility, Mode=OneWay}"/>
                                <Grid Grid.Column="4">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="Difficulty" Grid.Column="4" Foreground="{StaticResource ListHeaderTextBrush}" Visibility="{x:Bind MusicList.Visibility, Mode=OneWay}"/>

                                </Grid>
                            </Grid>
                        </Grid>
                        <ListView x:Name="MusicList" 
                                  HorizontalAlignment="Stretch"
                                  ItemsSource="{x:Bind ViewModel.Songs, Mode=TwoWay}"
                                  Grid.Row="2"
                                  CanDragItems="True"
                                  CanReorderItems="True"
                                  AllowDrop="True">

                            <ListView.ItemTemplate>
                                <DataTemplate x:Name="SongItemTemplate" x:DataType="viewModel:SongItemViewModel">
                                    <Grid Height="30" IsDoubleTapEnabled="True" HorizontalAlignment="Stretch" DoubleTapped="{x:Bind PlayCurrent}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="50"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <CheckBox x:Name="CheckBox" Grid.Column="0"/>

                                        <Grid Grid.Column="1" Height="30" VerticalAlignment="Top">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="0"/>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock x:Name="SongNameText" Text="{x:Bind SongName}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" TextTrimming="CharacterEllipsis" Grid.Column="1" />
                                            <TextBlock x:Name="SingerText" Text="{x:Bind Singer}" HorizontalAlignment="Stretch" TextTrimming="CharacterEllipsis" Grid.Column="2"/>
                                            <TextBlock x:Name="MapperText" Text="{x:Bind Mapper}" HorizontalAlignment="Stretch" TextTrimming="CharacterEllipsis" Grid.Column="3"/>
                                            <TextBlock x:Name="LengthText" Text="{x:Bind Length, Converter={StaticResource Converter2}}" HorizontalAlignment="Stretch" TextTrimming="CharacterEllipsis" Grid.Column="4" />
                                            <ComboBox x:Name="VersionSelectionBox" ItemsSource="{x:Bind Versions, Mode=OneWay}" SelectedIndex="{x:Bind SelectedVersionIndex, Mode=TwoWay}" Grid.Column="5" Margin="10,0,0,0"/>
                                        </Grid>

                                        <Grid.ContextFlyout>
                                            <MenuFlyout>

                                                <MenuFlyoutItem x:Uid="PlayMenuItem" Click="{x:Bind PlayCurrent}">
                                                    <MenuFlyoutItem.Icon>
                                                        <SymbolIcon Symbol="Play"/>
                                                    </MenuFlyoutItem.Icon>
                                                </MenuFlyoutItem>

                                                <MenuFlyoutItem x:Uid="RemoveFromListMenuItem">
                                                    <MenuFlyoutItem.Icon>
                                                        <SymbolIcon Symbol="Clear"/>
                                                    </MenuFlyoutItem.Icon>
                                                </MenuFlyoutItem>

                                                <MenuFlyoutItem x:Uid="DeleteMenuItem">
                                                    <MenuFlyoutItem.Icon>
                                                        <SymbolIcon Symbol="Delete"/>
                                                    </MenuFlyoutItem.Icon>
                                                </MenuFlyoutItem>

                                                <MenuFlyoutSeparator/>

                                                <MenuFlyoutItem x:Uid="MoveToMenuItem" Text="Move to">
                                                    <MenuFlyoutItem.Icon>
                                                        <FontIcon Glyph="{StaticResource MoveToIconGlyph}"/>
                                                    </MenuFlyoutItem.Icon>
                                                   
                                                </MenuFlyoutItem>

                                                <MenuFlyoutSeparator/>

                                                <MenuFlyoutItem x:Uid="PropertyMenuItem" Click="{x:Bind ShowProperty}">
                                                    <MenuFlyoutItem.Icon>
                                                        <SymbolIcon Symbol="MusicInfo"/>
                                                    </MenuFlyoutItem.Icon>
                                                </MenuFlyoutItem>
                                            </MenuFlyout>
                                        </Grid.ContextFlyout>
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                            <!--songs -->
                        </ListView>

                        <GridView x:Name="MusicAlbumView" Grid.Row="2"
                                  ItemsSource="{x:Bind ViewModel.Songs, Mode=TwoWay}">
                            <GridView.ItemContainerStyle>
                                <Style TargetType="GridViewItem">
                                    <Setter Property="Margin" Value="5,5,5,5"/>
                                </Style>
                            </GridView.ItemContainerStyle>
                            <GridView.ItemContainerTransitions>
                                <TransitionCollection>
                                    <RepositionThemeTransition/>
                                    <ContentThemeTransition/>
                                </TransitionCollection>
                            </GridView.ItemContainerTransitions>
                            <GridView.ItemTemplate>
                                <DataTemplate x:Name="MusicAlbumTemplate" x:DataType="viewModel:SongItemViewModel">
                                    <StackPanel Orientation="Vertical" Width="300" PointerEntered="StackPanel_PointerEntered" PointerExited="StackPanel_PointerExited">
                                        <StackPanel IsRightTapEnabled="True" Width="300" Height="300" >
                                            <Image x:Name="SongImage" Source="Assets/osuLogo.png" Stretch="Fill" />
                                            <Grid x:Name="InfoGrid" VerticalAlignment="Bottom" 
                                                 Background="{ThemeResource SystemControlChromeMediumLowAcrylicElementMediumBrush}"
                                                 CornerRadius="10" >
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Grid.ChildrenTransitions>
                                                    <TransitionCollection>
                                                        <EdgeUIThemeTransition Edge="Bottom"/>
                                                    </TransitionCollection>
                                                </Grid.ChildrenTransitions>
                                                <FontIcon Glyph="{StaticResource SingerIconGlyph}" Grid.Column="0" Margin="5,0,0,0"/>
                                                <TextBlock Text="{x:Bind Singer}" VerticalAlignment="Center" TextTrimming="WordEllipsis" Grid.Column="1" Margin="5,0,0,0"/>
                                                <TextBlock Text="{x:Bind Length, Converter={StaticResource Converter2}}" VerticalAlignment="Center" HorizontalAlignment="Right" Grid.Column="2" Margin="0,0,10,0"/>
                                                <FontIcon Glyph="{StaticResource VersionIconGlyph}" Grid.Row="1" Grid.Column="0" Margin="5,0,0,0"/>
                                                <TextBlock Text="{x:Bind SelectedVersion, Mode=OneWay}" Margin="5,0,10,0" Grid.Row="1" Grid.Column="1"/>
                                                <Button Grid.Row="1" Grid.Column="2" Background="Transparent" BorderBrush="Transparent">
                                                    <FontIcon Glyph="{StaticResource RightArrowIconGlyph}" FontSize="10"/>
                                                    <Button.Flyout>
                                                        <Flyout Placement="Top">
                                                            <ListView ItemsSource="{x:Bind Versions}" SelectedIndex="{x:Bind SelectedVersionIndex, Mode=OneWay}"/>
                                                        </Flyout>
                                                    </Button.Flyout>
                                                </Button>
                                            </Grid>

                                            <StackPanel.ContextFlyout>
                                                <MenuFlyout>

                                                    <MenuFlyoutItem x:Uid="PlayMenuItem" Click="{x:Bind PlayCurrent}">
                                                        <MenuFlyoutItem.Icon>
                                                            <SymbolIcon Symbol="Play"/>
                                                        </MenuFlyoutItem.Icon>
                                                    </MenuFlyoutItem>

                                                    <MenuFlyoutItem x:Uid="RemoveFromListMenuItem">
                                                        <MenuFlyoutItem.Icon>
                                                            <SymbolIcon Symbol="Clear"/>
                                                        </MenuFlyoutItem.Icon>
                                                    </MenuFlyoutItem>

                                                    <MenuFlyoutItem x:Uid="DeleteMenuItem">
                                                        <MenuFlyoutItem.Icon>
                                                            <SymbolIcon Symbol="Delete"/>
                                                        </MenuFlyoutItem.Icon>
                                                    </MenuFlyoutItem>

                                                    <MenuFlyoutSeparator/>

                                                    <MenuFlyoutItem x:Uid="MoveToMenuItem">
                                                        <MenuFlyoutItem.Icon>
                                                            <FontIcon Glyph="{StaticResource MoveToIconGlyph}"/>
                                                        </MenuFlyoutItem.Icon>

                                                    </MenuFlyoutItem>

                                                    <MenuFlyoutSeparator/>

                                                    <MenuFlyoutItem x:Uid="PropertyMenuItem" Click="{x:Bind ShowProperty}">
                                                        <MenuFlyoutItem.Icon>
                                                            <SymbolIcon Symbol="MusicInfo"/>
                                                        </MenuFlyoutItem.Icon>
                                                    </MenuFlyoutItem>
                                                </MenuFlyout>
                                            </StackPanel.ContextFlyout>
                                        </StackPanel>
                                        <TextBlock Text="{x:Bind SongName}" Margin="0,0,0,0" HorizontalAlignment="Center" FontSize="15"/>
                                    </StackPanel>
                                </DataTemplate>
                            </GridView.ItemTemplate>
                        </GridView>
                    </Grid>
                </Grid>
            </Frame>

        </muxc:NavigationView>

        <Button x:Uid="ListViewMode" Grid.Row="1" Grid.Column="2" HorizontalAlignment="Right"
                VerticalAlignment="Top" Margin="0,15,10,0" Click="ListViewMode_Click" Foreground="White">
            <Grid>
                <FontIcon x:Name="ListIcon" Glyph="{StaticResource ListIconGlyph}" FontSize="10"/>
                <FontIcon x:Name="AlbumIcon" Glyph="{StaticResource AlbumIconGlyph}" FontSize="10"/>
            </Grid>
        </Button>
    </Grid>
</Page>
