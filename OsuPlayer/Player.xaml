<UserControl
    x:Class="OsuPlayer.Player"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:OsuPlayer"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls" 
    mc:Ignorable="d">

    <UserControl.Resources>
        <ControlTemplate x:Key="PlayerControlButton" TargetType="Button">
            <Grid>
                <Ellipse Fill="Red"/>
                <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Width="{TemplateBinding Height}"/>
            </Grid>
        </ControlTemplate>

        <Style x:Key="ControlButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="45"/>
            <Setter Property="Height" Value="45"/>
            <Setter Property="CornerRadius" Value="30"/>
            <Setter Property="Background" Value="{ThemeResource SystemControlTransparentRevealBackgroundBrush}"/>
        </Style>

        <x:String x:Key="RightArrowIconGlyph">&#xE974;</x:String>
        <Style x:Key="VolumeSliderStyle" TargetType="Slider">
            <Style.Setters>
                <Setter Property="Width" Value="300"/>
            </Style.Setters>
        </Style>
        <local:VolumeToIconConverter x:Key="VolumeToIconConverter"/>

        <Style x:Key="VolumeIndicatorStyle" TargetType="TextBlock">
            <Style.Setters>
                <Setter Property="Margin" Value="0,10,0,0"/>
                <Setter Property="HorizontalAlignment" Value="Right"/>
            </Style.Setters>
        </Style>

        <local:ReferenceToBoolConverter x:Key="ReferenceToBoolConverter"/>
    </UserControl.Resources>

    <Grid HorizontalAlignment="Stretch">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="5*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <Image x:Name="CoverImage" Grid.Column="0" Source="{x:Bind ViewModel.ImageSource}" Width="150" Height="150"/>

        <!--Player control area-->
        <RelativePanel Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Stretch">
            <StackPanel x:Name="PlayerControls" Orientation="Vertical" RelativePanel.AlignHorizontalCenterWithPanel="True" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True" VerticalAlignment="Center" HorizontalAlignment="Stretch">

                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                    <Button x:Name="PreviousSongButton" Click="{x:Bind ViewModel.PlayPrevious}" Style="{StaticResource ControlButtonStyle}">
                        <SymbolIcon Symbol="Previous"/>
                    </Button>

                    <Button x:Name="PlayButton" Click="{x:Bind ViewModel.PlayCurrent}" Style="{StaticResource ControlButtonStyle}" Margin="10,0,10,0">
                        <SymbolIcon x:Name="PlayButtonIcon" Symbol="Play"/>
                    </Button>

                    <Button x:Name="NextSongButton" Click="{x:Bind ViewModel.PlayNext}" Style="{StaticResource ControlButtonStyle}">
                        <SymbolIcon Symbol="Next"/>
                    </Button>

                    <TextBlock x:Name="ProgressText" Text="{x:Bind ViewModel.Progress, Mode=OneWay, Converter={StaticResource Converter2}}"  VerticalAlignment="Center"  Margin="50,0,0,0"/>
                    <TextBlock Text="/" VerticalAlignment="Center"/>
                    <TextBlock x:Name="SongLengthText" Text="{x:Bind ViewModel.SongLength, Mode=OneWay, Converter={StaticResource Converter2}}"  VerticalAlignment="Center" />

                    <muxc:SplitButton x:Name="MuteButton" Click="{x:Bind ViewModel.Mute}" HorizontalAlignment="Right" Margin="50,0,0,0">
                        <muxc:SplitButton.ContentTransitions>
                            <TransitionCollection>
                                <EntranceThemeTransition/>
                            </TransitionCollection>
                        </muxc:SplitButton.ContentTransitions>
                        <FontIcon Glyph="{x:Bind ViewModel.Volume, Converter={StaticResource VolumeToIconConverter}, Mode=OneWay}"/>
                        <muxc:SplitButton.Flyout>
                            <Flyout Placement="Top" Closed="{x:Bind ViewModel.Save}">
                                <muxc:Expander x:Name="VolumeFrame" ExpandDirection="Up">
                                    <muxc:Expander.Header>
                                        <StackPanel x:Name="SimpleVolumeContent" Orientation="Vertical">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock x:Uid="GlobalVolumeTextBlock" Margin="0,10,0,0"/>
                                                <TextBlock Text="{x:Bind VolumeSlider.Value, Mode=OneWay}" Grid.Column="1" Style="{StaticResource VolumeIndicatorStyle}"/>
                                            </Grid>
                                            
                                            <Slider x:Name="VolumeSlider" Style="{StaticResource VolumeSliderStyle}" Value="{x:Bind ViewModel.Volume, Mode=TwoWay}" Grid.Row="1" Grid.ColumnSpan="2"/>
                                        </StackPanel>
                                    </muxc:Expander.Header>
                                    <muxc:Expander.Content>
                                        <StackPanel Orientation="Vertical" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="-50,-20,0,-10">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock x:Uid="SongVolumeTextBlock" Margin="0,10,0,0"/>
                                                <TextBlock Text="{x:Bind SongVolumeSlider.Value, Mode=OneWay}" Grid.Column="1" Style="{StaticResource VolumeIndicatorStyle}"/>
                                            </Grid>
                                            
                                            <Slider x:Name="SongVolumeSlider" HorizontalAlignment="Stretch" Style="{StaticResource VolumeSliderStyle}" Value="{x:Bind ViewModel.SongVolume, Mode=TwoWay}"/>

                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock x:Uid="HitsoundVolumeTextBlock" Margin="0,10,0,0"/>
                                                <TextBlock Text="{x:Bind HitsoundVolumeSlider.Value, Mode=OneWay}" Grid.Column="1" Style="{StaticResource VolumeIndicatorStyle}"/>
                                            </Grid>
                                            
                                            <Slider x:Name="HitsoundVolumeSlider" HorizontalAlignment="Stretch" Style="{StaticResource VolumeSliderStyle}" Value="{x:Bind ViewModel.HitsoundVolume, Mode=TwoWay}"/>
                                        </StackPanel>
                                    </muxc:Expander.Content>
                                </muxc:Expander>
                            </Flyout>
                        </muxc:SplitButton.Flyout>
                    </muxc:SplitButton>
                </StackPanel>

                <Slider x:Name="PlayingSlider" Minimum="0" Maximum="{x:Bind ViewModel.SongLength, Mode=OneWay}" Value="{x:Bind ViewModel.Progress, Mode=OneWay}">
                    <Slider.Resources>
                        <Storyboard x:Name="SliderStoryboard">
                            <DoubleAnimation x:Name="SliderAnimation"
                                             Storyboard.TargetName="PlayingSlider"
                                             Storyboard.TargetProperty="Value"
                                             EnableDependentAnimation="True"
                                             Duration="0:0:1">
                                <DoubleAnimation.EasingFunction>
                                    <CircleEase EasingMode="EaseInOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </Slider.Resources>
                </Slider>

            </StackPanel>

        </RelativePanel>
        <!-- Mods -->
        <muxc:ToggleSplitButton x:Name="DefaultModButton" IsChecked="{x:Bind ViewModel.IsModEnabled, Mode=TwoWay}" 
                                Grid.Column="3" Margin="0,0,100,0" IsEnabled="{x:Bind ViewModel.HasItems, Mode=OneWay}">
            <TextBlock Text="{x:Bind ViewModel.ModString, Mode=OneWay}"/>
            <muxc:ToggleSplitButton.Flyout>
                <MenuFlyout>
                    <MenuFlyoutItem x:Uid="HalfTimeItem" Click="HalfTimeItem_Click"/>
                    <MenuFlyoutItem x:Uid="DoubleTimeItem" Click="DoubleTimeItem_Click"/>
                    <MenuFlyoutItem x:Uid="NightCoreItem" Click="NightCoreItem_Click"/>
                </MenuFlyout>
            </muxc:ToggleSplitButton.Flyout>
        </muxc:ToggleSplitButton>

        <CheckBox x:Name="UseSkinHitsoundCheckbox" Content="Use skin hitsound" Checked="UseSkinHitsoundCheckbox_Checked" 
                  Unchecked="UseSkinHitsoundCheckbox_Unchecked" Grid.Column="4" IsEnabled="{x:Bind SettingsViewModel.HitsoundGlobalEnabled, Mode=OneWay}"/>
    </Grid>

</UserControl>
